{"ast":null,"code":"var _jsxFileName = \"/Users/charan/Work/starwars/src/components/Navbar.js\",\n  _s = $RefreshSig$();\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport { makeStyles } from '@mui/styles';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  navbar: {\n    backgroundColor: \"#000\",\n    alignItems: \"center\",\n    height: \"80px\",\n    justifyContent: \"flex-end\"\n  },\n  input: {\n    backgroundColor: '#FFF',\n    width: \"200px\",\n    // height:\"20px\",\n    borderRadius: \"10px\"\n  }\n}));\nexport default function Navbar() {\n  _s();\n  const [searchData, setSearchData] = useState([]);\n  const classes = useStyles();\n  useEffect(() => {\n    getMovies();\n  }, []);\n  async function getMovies() {\n    await fetch(`https://swapi.dev/api/films`).then(response => response.json()).then(res => {\n      console.log(\"movies in navbar\", res);\n      if (res.results != undefined) {\n        res.results.map(movie => {\n          setSearchData(prevState => [...prevState, movie.title]);\n        });\n      }\n      // getPeople()\n      console.log(\"calling\", res);\n    }).catch(error => console.log(error));\n  }\n  async function getPeople() {\n    await fetch(`https://swapi.dev/api/people`).then(response => response.json()).then(res => {\n      console.log(\"people in navbar\", res);\n      if (res.results != undefined) {\n        res.results.map(movie => {\n          setSearchData(prevState => [...prevState, movie.title]);\n        });\n      }\n      getPlanets();\n    }).catch(error => console.log(error));\n  }\n  async function getPlanets() {\n    await fetch(`https://swapi.dev/api/planets`).then(response => response.json()).then(res => {\n      console.log(\"planets in navbar\", res);\n      if (res.results != undefined) {\n        res.results.map(movie => {\n          setSearchData(prevState => [...prevState, movie.title]);\n        });\n      }\n      getStarships();\n    }).catch(error => console.log(error));\n  }\n  async function getStarships() {\n    await fetch(`https://swapi.dev/api/starships`).then(response => response.json()).then(res => {\n      console.log(\"starships in navbar\", res);\n      if (res.results != undefined) {\n        res.results.map(movie => {\n          setSearchData(prevState => [...prevState, movie.title]);\n        });\n      }\n    });\n    getStarships().catch(error => console.log(error));\n  }\n  useEffect(() => {\n    console.log(\"searchData\", searchData);\n  }, [searchData]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.navbar,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"free-solo-demo\",\n          freeSolo: true,\n          className: classes.input,\n          options: searchData,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"L8M13js2L2NIZrwHdoArTAaZGBI=\", false, function () {\n  return [useStyles];\n});\n_c = Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["AppBar","Box","Toolbar","makeStyles","TextField","Autocomplete","React","useState","useEffect","useCallback","useNavigate","jsxDEV","_jsxDEV","useStyles","theme","navbar","backgroundColor","alignItems","height","justifyContent","input","width","borderRadius","Navbar","_s","searchData","setSearchData","classes","getMovies","fetch","then","response","json","res","console","log","results","undefined","map","movie","prevState","title","catch","error","getPeople","getPlanets","getStarships","sx","flexGrow","children","position","className","id","freeSolo","options","renderInput","params","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/charan/Work/starwars/src/components/Navbar.js"],"sourcesContent":["import AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport { makeStyles } from '@mui/styles'\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport React,{useState, useEffect,useCallback} from 'react'\nimport {useNavigate} from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) => ({\n  navbar:{\n    backgroundColor:\"#000\",\n    alignItems:\"center\",\n    height:\"80px\",\n    justifyContent:\"flex-end\"\n  },\n  input:{\n    backgroundColor:'#FFF',\n    width:\"200px\",\n    // height:\"20px\",\n    borderRadius:\"10px\",\n  }\n}))\n\n\n\nexport default function Navbar() {\n  const [searchData, setSearchData] = useState([])\n  const classes = useStyles()\n\n  useEffect(()=>{\n      getMovies()\n  },[])\n\n  async function getMovies(){\n    await fetch(`https://swapi.dev/api/films`)\n          .then(response => response.json())\n          .then(res => {\n            console.log(\"movies in navbar\", res)\n            if(res.results != undefined){\n              res.results.map((movie)=>{\n                setSearchData((prevState) =>[...prevState, movie.title])  \n              })\n            }\n            // getPeople()\n            console.log(\"calling\", res)\n\n          })\n          .catch((error) => console.log(error));\n  }\n\n  async function getPeople(){\n    await fetch(`https://swapi.dev/api/people`)\n          .then(response => response.json())\n          .then(res => {\n            console.log(\"people in navbar\", res)\n            if(res.results != undefined){\n              res.results.map((movie)=>{\n                setSearchData((prevState) =>[...prevState, movie.title])  \n              })\n            }\n            getPlanets()\n          })\n          .catch((error) => console.log(error));\n  }\n\n\n  async function getPlanets(){\n    await fetch(`https://swapi.dev/api/planets`)\n          .then(response => response.json())\n          .then(res => {\n            console.log(\"planets in navbar\", res)\n            if(res.results != undefined){\n              res.results.map((movie)=>{\n                setSearchData((prevState) =>[...prevState, movie.title])  \n              })\n            }\n            getStarships()\n          })\n          .catch((error) => console.log(error));\n  }\n\n  async function getStarships(){\n    await fetch(`https://swapi.dev/api/starships`)\n          .then(response => response.json())\n          .then(res => {\n            console.log(\"starships in navbar\", res)\n            if(res.results != undefined){\n              res.results.map((movie)=>{\n                setSearchData((prevState) =>[...prevState, movie.title])  \n              })\n            }\n          })\n          getStarships()\n          .catch((error) => console.log(error));\n  }\n  useEffect(()=>{\n    console.log(\"searchData\", searchData)\n  },[searchData])\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar className={classes.navbar}>\n            <Autocomplete\n            id=\"free-solo-demo\"\n            freeSolo\n            className={classes.input}\n            options={searchData}\n            renderInput={(params) => <TextField {...params} label=\"search\" />}\n          />\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}