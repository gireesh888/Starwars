{"ast":null,"code":"var _jsxFileName = \"/Users/charan/Work/starwars/src/components/MovieDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieDetails(_ref) {\n  _s();\n  let {\n    navigation\n  } = _ref;\n  const [characters, setCharacters] = useState([]);\n  const [starships, setStarships] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const movie = location.state;\n  useEffect(() => {\n    console.log(\"data coming\", movie);\n    getAllCharacters();\n    getAllStarships();\n    getAllPlanets();\n    // getCharacters()\n    // getStarships()\n    // getPlanets()\n  }, []);\n  async function getAllCharacters() {\n    movie.characters.map(c => {\n      getCharacters(c);\n    });\n  }\n  async function getCharacters(url) {\n    await fetch(url).then(response => response.json()).then(res => {\n      console.log(\"character respnse\", res);\n      setCharacters(prevState => [...prevState, res]);\n    }).catch(error => console.log(error));\n  }\n  async function getAllStarships() {\n    movie.starships.map(s => {\n      getStarships(s);\n    });\n  }\n  async function getStarships(url) {\n    await fetch(url).then(response => response.json()).then(res => {\n      console.log(\"starships respnse\", res);\n      setStarships(prevState => [...prevState, res]);\n    }).catch(error => console.log(error));\n  }\n  async function getAllPlanets() {\n    movie.planets.map(p => {\n      getPlanets(p);\n    });\n  }\n  async function getPlanets(url) {\n    await fetch(url).then(response => response.json()).then(res => {\n      console.log(\"planet respnse\", res);\n      setPlanets(prevState => [...prevState, res]);\n    }).catch(error => console.log(error));\n  }\n  async function openCharacter() {}\n  async function openStarship() {}\n  const handleClick = useCallback(id => () => {\n    console.log(\"movie\", id);\n    navigate('/details', {\n      state: id\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), characters.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openCharacter(item),\n      children: item.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"starships\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), starships.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openStarship(item),\n      children: item.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"planets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), planets.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openPlanet(item),\n      children: item.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      title: \"Actor\",\n      onClick: () => navigate('/actor')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      title: \"Planet\",\n      onClick: () => navigate('/planet')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      title: \"Startship\",\n      onClick: () => navigate('/starship')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetails, \"/JzjWDM3BN4zNyIDL/y+wGSg200=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","MovieDetails","_ref","_s","navigation","characters","setCharacters","starships","setStarships","planets","setPlanets","navigate","location","movie","state","console","log","getAllCharacters","getAllStarships","getAllPlanets","map","c","getCharacters","url","fetch","then","response","json","res","prevState","catch","error","s","getStarships","p","getPlanets","openCharacter","openStarship","handleClick","useCallback","id","children","title","fileName","_jsxFileName","lineNumber","columnNumber","item","index","onClick","name","openPlanet","_c","$RefreshReg$"],"sources":["/Users/charan/Work/starwars/src/components/MovieDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {useNavigate, useLocation} from \"react-router-dom\"\n\nexport default function MovieDetails({navigation}) {\n  const[characters, setCharacters] = useState([])\n  const[starships, setStarships] = useState([])\n  const[planets, setPlanets] = useState([])\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const movie = location.state\n  \n  useEffect(()=>{\n    console.log(\"data coming\", movie)\n    getAllCharacters()\n    getAllStarships()\n    getAllPlanets()\n    // getCharacters()\n    // getStarships()\n    // getPlanets()\n  },[])\n\n  async function getAllCharacters(){\n    movie.characters.map((c)=>{\n      getCharacters(c)\n    })  \n  }\n\n  async function getCharacters(url){\n    await fetch(url)\n          .then(response => response.json())\n          .then(res => {\n            console.log(\"character respnse\", res)\n            setCharacters((prevState) => [...prevState , res])\n          })\n          .catch((error) => console.log(error));\n  }\n\n  async function getAllStarships(){\n    movie.starships.map((s)=>{\n      getStarships(s)\n    })  \n  }\n\n  async function getStarships(url){\n    await fetch(url)\n          .then(response => response.json())\n          .then(res => {\n            console.log(\"starships respnse\", res)\n            setStarships((prevState) => [...prevState , res])\n          })\n          .catch((error) => console.log(error));\n  }\n\n  async function getAllPlanets(){\n    movie.planets.map((p)=>{\n      getPlanets(p)\n    })  \n  }\n  async function getPlanets(url){\n    await fetch(url)\n          .then(response => response.json())\n          .then(res => {\n            console.log(\"planet respnse\", res)\n            setPlanets((prevState) => [...prevState , res])\n          })\n          .catch((error) => console.log(error));\n  }\n\n  async function openCharacter(){\n\n  }\n\n  async function openStarship(){\n    \n  }\n\n  const handleClick = useCallback((id) => () => {\n    console.log(\"movie\", id)\n    navigate('/details',{state: id})\n  },\n  [],\n)\n  return (\n    <div>\n      <h1>{movie.title}</h1>\n      <h2>characters</h2>\n      {characters.map((item, index)=>(\n        <button onClick={openCharacter(item)} key={index}>{item.name}</button >\n      ))}\n\n      <h2>starships</h2>\n\n      {starships.map((item, index)=>(\n        <button onClick={openStarship(item)} key={index}>{item.name}</button >\n      ))}\n        <h2>planets</h2>\n\n      {planets.map((item, index)=>(\n        <button onClick={openPlanet(item)} key={index}>{item.name}</button >\n      ))}\n      <button title=\"Actor\" onClick={()=> navigate('/actor')}/>\n      <button title=\"Planet\" onClick={()=> navigate('/planet')}/>\n      <button title=\"Startship\" onClick={()=> navigate('/starship')}/>\n\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}